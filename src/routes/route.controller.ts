import {
  Controller,
  Post,
  Body,
  Get,
  Delete,
  Param,
  Req,
  UseGuards,
} from '@nestjs/common'
import { RouteService } from './route.service'
import { JwtAuthGuard } from '../common/guards/jwt-auth.guard'

@UseGuards(JwtAuthGuard)
@Controller('routes')
export class RouteController {
  constructor(private readonly routeService: RouteService) {}

  // ‚úÖ Criar uma nova rota associada a um grupo
  @Post()
  async createRoute(@Req() req, @Body() body: any) {
    if (!req.user?.userId) {
    throw new Error('Usu√°rio n√£o autenticado.')
  }
  const userId = req.user.userId
  console.log('üîê req.user:', req.user);
    return this.routeService.createRoute({
      ...body,
      criadoPor: userId,
    })
  }

  // ‚úÖ Buscar todas as rotas de grupos dos quais o usu√°rio participa
  @Get()
  async findAllByUser(@Req() req) {
    if (!req.user?.userId) {
    throw new Error('Usu√°rio n√£o autenticado.')
  }
  const userId = req.user.userId
    return this.routeService.findRoutesForUser(userId)
  }

  // ‚úÖ Buscar rotas por ID de grupo (ex: /routes/groups/:groupId)
  @Get('groups/:groupId')
  async getRoutesByGroup(@Param('groupId') groupId: string) {
    return this.routeService.findByGroup(groupId)
  }

  // ‚úÖ Buscar rota espec√≠fica por ID (ex: /routes/specific/:id)
  // ‚ö†Ô∏è IMPORTANTE: precisa vir ANTES de ":id" gen√©rico, sen√£o nunca ser√° chamado
  @Get('specific/:id')
  async getRouteById(@Param('id') id: string) {
    //console.log('üì• Buscando rota pelo ID:', id)
    return this.routeService.findById(id)
  }

  // ‚úÖ Excluir uma rota por ID (ex: /routes/:id)
  @Delete(':id')
  async deleteRoute(@Param('id') id: string, @Req() req: any) {
    if (!req.user?.userId) {
    throw new Error('Usu√°rio n√£o autenticado.')
  }
  const userId = req.user.userId
    return this.routeService.deleteRoute(id, userId)
  }

  // ‚ö†Ô∏è Rota gen√©rica para buscar por ID, opcional se "specific/:id" for suficiente
  @Get(':id')
  async findById(@Param('id') id: string) {
    return this.routeService.findById(id)
  }
}
